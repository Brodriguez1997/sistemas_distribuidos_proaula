# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import server_pb2 as server__pb2


class ConvertidorUrlsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ConvertirUrls = channel.unary_unary(
                '/distribuidos.ConvertidorUrls/ConvertirUrls',
                request_serializer=server__pb2.ConvertirUrlsRequest.SerializeToString,
                response_deserializer=server__pb2.ConvertirUrlsResponse.FromString,
                )
        self.DescargarUrls = channel.unary_unary(
                '/distribuidos.ConvertidorUrls/DescargarUrls',
                request_serializer=server__pb2.DescargarUrlsRequest.SerializeToString,
                response_deserializer=server__pb2.DescargarUrlsResponse.FromString,
                )


class ConvertidorUrlsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ConvertirUrls(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DescargarUrls(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConvertidorUrlsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ConvertirUrls': grpc.unary_unary_rpc_method_handler(
                    servicer.ConvertirUrls,
                    request_deserializer=server__pb2.ConvertirUrlsRequest.FromString,
                    response_serializer=server__pb2.ConvertirUrlsResponse.SerializeToString,
            ),
            'DescargarUrls': grpc.unary_unary_rpc_method_handler(
                    servicer.DescargarUrls,
                    request_deserializer=server__pb2.DescargarUrlsRequest.FromString,
                    response_serializer=server__pb2.DescargarUrlsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'distribuidos.ConvertidorUrls', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ConvertidorUrls(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ConvertirUrls(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/distribuidos.ConvertidorUrls/ConvertirUrls',
            server__pb2.ConvertirUrlsRequest.SerializeToString,
            server__pb2.ConvertirUrlsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DescargarUrls(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/distribuidos.ConvertidorUrls/DescargarUrls',
            server__pb2.DescargarUrlsRequest.SerializeToString,
            server__pb2.DescargarUrlsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ConvertidorOfficeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ConvertirArchivos = channel.unary_unary(
                '/distribuidos.ConvertidorOffice/ConvertirArchivos',
                request_serializer=server__pb2.ConvertirArchivosRequest.SerializeToString,
                response_deserializer=server__pb2.ConvertirArchivosResponse.FromString,
                )
        self.DescargarArchivo = channel.unary_unary(
                '/distribuidos.ConvertidorOffice/DescargarArchivo',
                request_serializer=server__pb2.DescargarArchivoRequest.SerializeToString,
                response_deserializer=server__pb2.DescargarArchivoResponse.FromString,
                )
        self.Saludar = channel.unary_unary(
                '/distribuidos.ConvertidorOffice/Saludar',
                request_serializer=server__pb2.SaludarRequest.SerializeToString,
                response_deserializer=server__pb2.SaludarResponse.FromString,
                )


class ConvertidorOfficeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ConvertirArchivos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DescargarArchivo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Saludar(self, request, context):
        """Nuevo m√©todo para enviar un "Hola" y recibir una respuesta
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConvertidorOfficeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ConvertirArchivos': grpc.unary_unary_rpc_method_handler(
                    servicer.ConvertirArchivos,
                    request_deserializer=server__pb2.ConvertirArchivosRequest.FromString,
                    response_serializer=server__pb2.ConvertirArchivosResponse.SerializeToString,
            ),
            'DescargarArchivo': grpc.unary_unary_rpc_method_handler(
                    servicer.DescargarArchivo,
                    request_deserializer=server__pb2.DescargarArchivoRequest.FromString,
                    response_serializer=server__pb2.DescargarArchivoResponse.SerializeToString,
            ),
            'Saludar': grpc.unary_unary_rpc_method_handler(
                    servicer.Saludar,
                    request_deserializer=server__pb2.SaludarRequest.FromString,
                    response_serializer=server__pb2.SaludarResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'distribuidos.ConvertidorOffice', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ConvertidorOffice(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ConvertirArchivos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/distribuidos.ConvertidorOffice/ConvertirArchivos',
            server__pb2.ConvertirArchivosRequest.SerializeToString,
            server__pb2.ConvertirArchivosResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DescargarArchivo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/distribuidos.ConvertidorOffice/DescargarArchivo',
            server__pb2.DescargarArchivoRequest.SerializeToString,
            server__pb2.DescargarArchivoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Saludar(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/distribuidos.ConvertidorOffice/Saludar',
            server__pb2.SaludarRequest.SerializeToString,
            server__pb2.SaludarResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
